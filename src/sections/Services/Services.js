// src/sections/Services/Services.js (ƒê√É S·ª¨A L·ªñI)
import React, { useState, useEffect } from 'react';
import ServiceCard from '../../components/ServiceCard/ServiceCard';
import './Services.css';

const Services = () => {
  const [services, setServices] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchServices = async () => {
      setLoading(true);
      setError(null);
      try {
        // Mock data v·ªõi key 'title' ƒë·ªÉ ƒë·ªìng b·ªô v·ªõi ServiceCard
        const mockApiResult = {
          isSuccess: true,
          data: [
            { id: 'uuid-1', title: 'T·∫Øm & S·∫•y Th∆°m Tho', description: 'S·ª≠ d·ª•ng s·ªØa t·∫Øm th·∫£o d∆∞·ª£c, massage th∆∞ gi√£n, an to√†n cho da.', price: 250000, icon: 'üõÅ' },
            { id: 'uuid-2', title: 'C·∫Øt T·ªâa L√¥ng & T·∫°o Ki·ªÉu', description: 'T·∫°o ki·ªÉu chuy√™n nghi·ªáp, g·ªçn g√†ng v√† ƒë√°ng y√™u theo y√™u c·∫ßu.', price: 400000, icon: '‚úÇÔ∏è' },
            { id: 'uuid-3', title: 'Combo ChƒÉm S√≥c To√†n Di·ªán', description: 'Tr·ªçn g√≥i t·∫Øm, c·∫Øt t·ªâa, v·ªá sinh tai, c·∫Øt m√≥ng. Ti·∫øt ki·ªám h∆°n!', price: 600000, icon: 'üíñ' },
          ],
          message: "L·∫•y danh s√°ch d·ªãch v·ª• th√†nh c√¥ng",
        };
        
        await new Promise(resolve => setTimeout(resolve, 1000)); 

        if (mockApiResult.isSuccess) {
          setServices(mockApiResult.data);
        } else {
          throw new Error(mockApiResult.message || 'L·ªói kh√¥ng x√°c ƒë·ªãnh.');
        }

      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchServices();
  }, []);

  const renderContent = () => {
    if (loading) {
      return <p className="status-text">ƒêang t·∫£i d·ªãch v·ª•, vui l√≤ng ch·ªù...</p>;
    }
    if (error) {
      return <p className="status-text error-text">L·ªói: {error}</p>;
    }
    if (services.length === 0) {
        return <p className="status-text">Hi·ªán ch∆∞a c√≥ d·ªãch v·ª• n√†o.</p>;
    }
    return (
      <div className="services-grid">
        {/* --- ƒê√ÇY L√Ä PH·∫¶N S·ª¨A L·ªñI CH√çNH --- */}
        {services.map(service => (
          // Thay v√¨ truy·ªÅn t·ª´ng props, ch√∫ng ta truy·ªÅn c·∫£ object `service`
          <ServiceCard
            key={service.id}
            service={service} // <- S·ª¨A ·ªû ƒê√ÇY
          />
        ))}
      </div>
    );
  };

  return (
    <section id="services" className="services-section">
      <div className="container">
        <h2>D·ªãch V·ª• N·ªïi B·∫≠t</h2>
        <p className="section-subtitle">
            Mang ƒë·∫øn nh·ªØng tr·∫£i nghi·ªám tuy·ªát v·ªùi nh·∫•t cho nh·ªØng ng∆∞·ªùi b·∫°n b·ªën ch√¢n.
        </p>
        {renderContent()}
      </div>
    </section>
  );
};

export default Services;